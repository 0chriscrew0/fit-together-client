{"version":3,"sources":["img/FitTogether-logo-v2.png","components/User/Join.tsx","components/User/Register.tsx","components/User/Login.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Join","react","className","src","Logo","alt","react_router_dom","to","React","Register","htmlFor","name","type","id","Login","App","react_default","a","createElement","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f629611b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FitTogether-logo-v2.1b858da5.png\";","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../img/FitTogether-logo-v2.png\";\r\n\r\nexport default class Join extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"join\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row join-row\">\r\n            <div className=\"col-md-6 join-right\">\r\n              <div className=\"join-main\">\r\n                <div>\r\n                  <img\r\n                    className=\"img-fluid logo\"\r\n                    src={Logo}\r\n                    alt=\"FitTogether Logo\"\r\n                  />\r\n                </div>\r\n                <h5>The ultimate online fitness experience</h5>\r\n\r\n                <p className=\"join-text\">Join Fit Together today.</p>\r\n\r\n                <Link className=\"btn btn-block btn-primary\" to=\"/register\">\r\n                  Sign up\r\n                </Link>\r\n                <Link className=\"btn btn-block btn-outline-primary\" to=\"/login\">\r\n                  Log in\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 join-left\">\r\n              <div className=\"join-info\">\r\n                <div className=\"join-info-inner\">\r\n                  <div className=\"join-info-item\">\r\n                    <i className=\"fas fa-search\" />\r\n                    <p>Search for the perfect routines.</p>\r\n                  </div>\r\n                  <div className=\"join-info-item\">\r\n                    <i className=\"fas fa-user-friends\" />\r\n                    <p>Follow the best workout creators.</p>\r\n                  </div>\r\n                  <div className=\"join-info-item\">\r\n                    <i className=\"fas fa-comment\" />\r\n                    <p>Share your thoughts.</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 p-0 join-buttons\">\r\n            <Link className=\"btn btn-primary\" to=\"/register\">\r\n              Sign up\r\n            </Link>\r\n\r\n            <Link className=\"btn btn-outline-primary\" to=\"/login\">\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Register extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 register-form\">\r\n              <h2>Register Form</h2>\r\n\r\n              <div className=\"form-row\">\r\n                <div className=\"col form-group\">\r\n                  <label htmlFor=\"firstName\">First Name</label>\r\n                  <input\r\n                    name=\"firstName\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"firstName\"\r\n                  />\r\n                </div>\r\n                <div className=\"col form-group\">\r\n                  <label htmlFor=\"lastName\">Last Name</label>\r\n                  <input\r\n                    name=\"lastName\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"lastName\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Your Email</label>\r\n                <input\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"col form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n                <div className=\"col form-group\">\r\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"confirmPassword\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"terms\"\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"terms\">\r\n                  I agree to the{\" \"}\r\n                  <Link to=\"/terms-and-conditions\">Terms and Conditions</Link>\r\n                </label>\r\n              </div>\r\n              <button className=\"btn btn-primary px-4\">Register</button>\r\n            </div>\r\n            <div className=\"col-md-6 register-info\">\r\n              <h2>Information</h2>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempora\r\n                amet in sunt impedit laborum blanditiis, beatae voluptates\r\n                voluptatibus laboriosam perspiciatis nostrum ut, illo quis dolor\r\n                voluptate dolores sequi, eum quibusdam.\r\n              </p>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem\r\n                placeat dolore provident et? Voluptates perspiciatis\r\n                repellendus, dolores consequatur libero numquam!\r\n              </p>\r\n              <Link className=\"btn btn-white\" to=\"/login\">\r\n                I already have an account\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Logo from \"../../img/FitTogether-logo-v2.png\";\r\n\r\nexport default class Login extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mx-auto\">\r\n              <img\r\n                className=\"img-fluid logo\"\r\n                src={Logo}\r\n                alt=\"FitTogether Logo\"\r\n              />\r\n\r\n              <h4>Log in to FitTogether</h4>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n\r\n              <button className=\"btn btn-block btn-primary\">Log in</button>\r\n\r\n              <div className=\"login-links\">\r\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                <span>&#183;</span>\r\n                <Link to=\"/register\">Create Account</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport \"./css/main.css\";\nimport Join from \"./components/User/Join\";\nimport Register from \"./components/User/Register\";\nimport Login from \"./components/User/Login\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Join} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}